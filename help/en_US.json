{
  "eep": [
    "Eep",
    ""
  ],
  "deviceId": [
    "Device Id",
    ""
  ],
  "percents": [
    "Percents",
    ""
  ],
  "dragEnd": [
    "Drag End",
    ""
  ],
  "dragStart": [
    "Drag Start",
    ""
  ],
  "message": [
    "Message",
    ""
  ],
  "filename": [
    "Filename",
    ""
  ],
  "key": [
    "Key",
    ""
  ],
  "todayStyle": [
    "Today Style",
    ""
  ],
  "outOfMonthStyle ": [
    "Out Of Month Style ",
    ""
  ],
  "weekendStyle": [
    "Weekend Style",
    ""
  ],
  "dowStyle": [
    "Dow Style",
    ""
  ],
  "titleStyle": [
    "Title Style",
    ""
  ],
  "highlightedStyle": [
    "Highlighted Style",
    ""
  ],
  "selectedStyle": [
    "Selected Style",
    ""
  ],
  "todayCornerRadius": [
    "Corner Radius",
    ""
  ],
  "todayFontStyle": [
    "Today Font Style",
    ""
  ],
  "todayFontWeight": [
    "Today Font Weight",
    ""
  ],
  "todayFontSize": [
    "Today Font Size",
    ""
  ],
  "todayFontColor": [
    "Today Font Color",
    ""
  ],
  "todayFontFamily": [
    "Today Font Family",
    ""
  ],
  "todayBorder": [
    "Today Border",
    ""
  ],
  "todayBackground": [
    "Today Background",
    ""
  ],
  "outOfMonthCornerRadius": [
    "Corner Radius",
    ""
  ],
  "outOfMonthFontStyle": [
    "Out Of Month Font Style",
    ""
  ],
  "outOfMonthFontWeight": [
    "Out Of Month Font Weight",
    ""
  ],
  "outOfMonthFontSize": [
    "Out Of Month Font Size",
    ""
  ],
  "outOfMonthFontColor": [
    "Out Of Month Font Color",
    ""
  ],
  "outOfMonthFontFamily": [
    "Out Of Month Font Family",
    ""
  ],
  "outOfMonthBorder": [
    "Out Of Month Border",
    ""
  ],
  "outOfMonthBackground": [
    "Out Of Month Background",
    ""
  ],
  "weekendCornerRadius": [
    "Corner Radius",
    ""
  ],
  "weekendFontStyle": [
    "Weekend Font Style",
    ""
  ],
  "weekendFontWeight": [
    "Weekend Font Weight",
    ""
  ],
  "weekendFontSize": [
    "Weekend Font Size",
    ""
  ],
  "weekendFontColor": [
    "Weekend Font Color",
    ""
  ],
  "weekendFontFamily": [
    "Weekend Font Family",
    ""
  ],
  "weekendBorder": [
    "Weekend Border",
    ""
  ],
  "weekendBackground": [
    "Weekend Background",
    ""
  ],
  "dowCornerRadius": [
    "Corner Radius",
    ""
  ],
  "dowFontStyle": [
    "Dow Font Style",
    ""
  ],
  "dowFontWeight": [
    "Dow Font Weight",
    ""
  ],
  "dowFontSize": [
    "Dow Font Size",
    ""
  ],
  "dowFontColor": [
    "Dow Font Color",
    ""
  ],
  "dowFontFamily": [
    "Dow Font Family",
    ""
  ],
  "dowBorder": [
    "Dow Border",
    ""
  ],
  "dowBackground": [
    "Dow Background",
    ""
  ],
  "titleFontColor": [
    "Title Font Color",
    ""
  ],
  "titleBorder": [
    "Title Border",
    ""
  ],
  "titleBackground": [
    "Title Background",
    ""
  ],
  "highlightedCornerRadius": [
    "Corner Radius",
    ""
  ],
  "highlightedFontStyle": [
    "Highlighted Font Style",
    ""
  ],
  "highlightedFontWeight": [
    "Highlighted Font Weight",
    ""
  ],
  "highlightedFontSize": [
    "Highlighted Font Size",
    ""
  ],
  "highlightedFontColor": [
    "Highlighted Font Color",
    ""
  ],
  "highlightedFontFamily": [
    "Highlighted Font Family",
    ""
  ],
  "highlightedBorder": [
    "Highlighted Border",
    ""
  ],
  "highlightedBackground": [
    "Highlighted Background",
    ""
  ],
  "selectedCornerRadius": [
    "Corner Radius",
    ""
  ],
  "selectedFontStyle": [
    "Selected Font Style",
    ""
  ],
  "selectedFontWeight": [
    "Selected Font Weight",
    ""
  ],
  "selectedFontSize": [
    "Selected Font Size",
    ""
  ],
  "selectedFontColor": [
    "Selected Font Color",
    ""
  ],
  "selectedFontFamily": [
    "Selected Font Family",
    ""
  ],
  "selectedBorder": [
    "Selected Border",
    ""
  ],
  "selectedBackground": [
    "Selected Background",
    ""
  ],
  "normalCornerRadius": [
    "Corner Radius",
    ""
  ],
  "normalFontStyle": [
    "Normal Font Style",
    ""
  ],
  "normalFontWeight": [
    "Normal Font Weight",
    ""
  ],
  "normalFontSize": [
    "Normal Font Size",
    ""
  ],
  "normalFontColor": [
    "Normal Font Color",
    ""
  ],
  "normalFontFamily": [
    "Normal Font Family",
    ""
  ],
  "normalBorder": [
    "Normal Border",
    ""
  ],
  "normalBackground": [
    "Normal Background",
    ""
  ],
  "calendarSpacingHorizontal": [
    "Calendar Spacing Horizontal",
    ""
  ],
  "calendarSpacingVertical": [
    "Calendar Spacing Vertical",
    ""
  ],
  "calendarPaddingRight": [
    "Calendar Padding Right",
    ""
  ],
  "calendarPaddingLeft": [
    "Calendar Padding Left",
    ""
  ],
  "calendarPaddingBottom": [
    "Calendar Padding Bottom",
    ""
  ],
  "calendarPaddingTop": [
    "Calendar Padding Top",
    ""
  ],
  "titleHeight": [
    "Title Height",
    ""
  ],
  "additionalColumns": [
    "Additional Columns",
    ""
  ],
  "yExclude": [
    "Y Exclude",
    ""
  ],
  "yColumn": [
    "Y Column",
    ""
  ],
  "yDataRule": [
    "Y Data Rule",
    ""
  ],
  "xExclude": [
    "X Exclude",
    ""
  ],
  "xColumn": [
    "X Column",
    ""
  ],
  "xDataRule": [
    "X Data Rule",
    ""
  ],
  "isRepeaterMode": [
    "Is Repeater Mode",
    ""
  ],
  "saRelTo": [
    " Relative  To",
    ""
  ],
  "saVFocus": [
    " Vertical  Focus",
    ""
  ],
  "saHFocus": [
    " Horizontal  Focus",
    ""
  ],
  "saDir": [
    " Direction",
    "Defines the direction toward which the series slides. For example, if this property is set to Left, the series slides onto the chart from right to left."
  ],
  "saOffset": [
    " Offset",
    ""
  ],
  "saMinElDuration": [
    " Minimum  Element  Duration",
    ""
  ],
  "saElOffset": [
    " Element  Offset",
    ""
  ],
  "saDurationEx": [
    " Duration",
    "Defines the duration of the animation in seconds."
  ],
  "saType": [
    " Series  Animation",
    ""
  ],
  "mainValueAxis": [
    "Main Value Axis",
    ""
  ],
  "onUpdateRepeater": [
    "On Update Repeater",
    ""
  ],
  "seriesIndex": [
    "Series Index",
    ""
  ],
  "yOriginalColumn": [
    "Y Original Column",
    ""
  ],
  "xOriginalColumn": [
    "X Original Column",
    ""
  ],
  "markerStrokeStyle": [
    "Marker Stroke Style",
    ""
  ],
  "seriesType": [
    "Series Type",
    ""
  ],
  "dataTipSymbolId": [
    "Data Tip Symbol Id",
    ""
  ],
  "dgDataTip": [
    "Dg Data Tip",
    ""
  ],
  "showDataTips": [
    "Show Data Tips",
    ""
  ],
  "markerStrokeWidth": [
    "Marker Stroke Width",
    ""
  ],
  "markerStroke": [
    "Marker Stroke",
    ""
  ],
  "markerFill": [
    "Marker Fill",
    ""
  ],
  "markersType": [
    "Markers Type",
    ""
  ],
  "form": [
    "Form",
    ""
  ],
  "titleLetterSpacing": [
    "Title Letter Spacing",
    ""
  ],
  "titleTextDecoration": [
    "Title Text Decoration",
    ""
  ],
  "titleFontWeight": [
    "Title Font Weight",
    ""
  ],
  "titleFontStyle": [
    "Title Font Style",
    ""
  ],
  "titleFontSize": [
    "Title Font Size",
    ""
  ],
  "titleFontFamily": [
    "Title Font Family",
    ""
  ],
  "titleColor": [
    "Title Color",
    ""
  ],
  "divLabels": [
    "Div Labels",
    ""
  ],
  "labelRotation": [
    "Label Rotation",
    ""
  ],
  "labelsFontSize": [
    "Labels Font Size",
    ""
  ],
  "tickStrokeWidth": [
    "Tick Stroke Width",
    ""
  ],
  "tickStroke": [
    "Tick Stroke",
    ""
  ],
  "tickPlacement": [
    "Tick Placement",
    ""
  ],
  "tickLength": [
    "Tick Length",
    ""
  ],
  "showLine": [
    "Show Line",
    ""
  ],
  "showLabels": [
    "Show Labels",
    ""
  ],
  "minorTickPlacement": [
    "Minor Tick Placement",
    ""
  ],
  "minorTickLength": [
    "Minor Tick Length",
    ""
  ],
  "labelToEdgeGap": [
    "Label To Edge Gap",
    ""
  ],
  "labelGap": [
    "Label Gap",
    ""
  ],
  "axisStrokeStyle": [
    "Axis Stroke Style",
    ""
  ],
  "axisStrokeWidth": [
    "Axis Stroke Width",
    ""
  ],
  "axisStroke": [
    "Axis Stroke",
    ""
  ],
  "verticalAxisTitleAlignment": [
    "Vertical Axis Title Alignment",
    ""
  ],
  "labelAlign": [
    "Label Align",
    ""
  ],
  "dgDataProvider": [
    "Dg Data Provider",
    ""
  ],
  "inverted": [
    "Inverted",
    ""
  ],
  "axisType": [
    "Axis Type",
    ""
  ],
  "assignedInterval": [
    "Assigned Interval",
    ""
  ],
  "dgAssignedMaximum": [
    "Dg Assigned Maximum",
    ""
  ],
  "dgAssignedMinimum": [
    "Dg Assigned Minimum",
    ""
  ],
  "baseAtZero": [
    "Base At Zero",
    ""
  ],
  "dgAutoAdjust": [
    "Dg Auto Adjust",
    ""
  ],
  "labelsMode": [
    "Labels Mode",
    ""
  ],
  "axisID": [
    "Axis I D",
    ""
  ],
  "displayName": [
    "Display Name",
    ""
  ],
  "title": [
    "Title",
    ""
  ],
  "href": [
    "Href",
    ""
  ],
  "isTruePath": [
    "Is True Path",
    ""
  ],
  "useClipping": [
    "Use Clipping",
    ""
  ],
  "stroke": [
    "Stroke",
    "Defines the stroke for this element."
  ],
  "fill": [
    "Fill",
    "Defines the fill for this element."
  ],
  "strokeStyle": [
    "Stroke Style",
    "Defines the line style of the stroke for this element."
  ],
  "strokeWidth": [
    "Stroke Width",
    "Defines the width of the stroke line for this element."
  ],
  "filterUnits": [
    "Filter Units",
    ""
  ],
  "filterHeight": [
    "Filter Height",
    ""
  ],
  "filterWidth": [
    "Filter Width",
    ""
  ],
  "filterY": [
    "Filter Y",
    ""
  ],
  "filterX": [
    "Filter X",
    ""
  ],
  "maskContentUnits": [
    "Mask Content Units",
    ""
  ],
  "maskUnits": [
    "Mask Units",
    ""
  ],
  "mask": [
    "Mask",
    ""
  ],
  "clipPath": [
    "Clip Path",
    ""
  ],
  "clipRule": [
    "Clip Rule",
    ""
  ],
  "fillRule": [
    "Fill Rule",
    ""
  ],
  "svgId": [
    "Svg Id",
    ""
  ],
  "solidOnly": [
    "Solid Only",
    ""
  ],
  "supportSeparateBorder": [
    "Support Separate Border",
    ""
  ],
  "isBorder": [
    "Is Border",
    ""
  ],
  "borderStyleField": [
    "Border Style Field",
    ""
  ],
  "borderWidthField": [
    "Border Width Field",
    ""
  ],
  "editorType": [
    "Editor Type",
    ""
  ],
  "datalist": [
    "Datalist",
    ""
  ],
  "inputType": [
    "Input Type",
    ""
  ],
  "isValid": [
    "Is Valid",
    ""
  ],
  "onLoseFocus": [
    "On Lose Focus",
    ""
  ],
  "onEnter": [
    "On Enter",
    ""
  ],
  "tabIndex": [
    "Tab Index",
    ""
  ],
  "maxLength": [
    "Max Length",
    ""
  ],
  "spellcheck": [
    "Spellcheck",
    ""
  ],
  "autofocus": [
    "Autofocus",
    ""
  ],
  "autocomplete": [
    "Autocomplete",
    ""
  ],
  "snapSpeed": [
    "Snap Speed",
    ""
  ],
  "snapInterval": [
    "Snap Interval",
    ""
  ],
  "enumLabels": [
    "Enum Labels",
    ""
  ],
  "enums": [
    "Enums",
    ""
  ],
  "placeholder": [
    "Placeholder",
    ""
  ],
  "editorTooltip": [
    "Editor Tooltip",
    ""
  ],
  "tooltipHelpMode": [
    "Tooltip Help Mode",
    ""
  ],
  "editorPlaceholder": [
    "Editor Placeholder",
    ""
  ],
  "showBinding": [
    "Show Binding",
    ""
  ],
  "readOnly": [
    "Read Only",
    ""
  ],
  "target": [
    "Target",
    ""
  ],
  "placement": [
    "Placement",
    ""
  ],
  "labelsLetterSpacing": [
    "Labels Letter Spacing",
    ""
  ],
  "labelsTextDecoration": [
    "Labels Text Decoration",
    ""
  ],
  "labelsFontWeight": [
    "Labels Font Weight",
    ""
  ],
  "labelsFontStyle": [
    "Labels Font Style",
    ""
  ],
  "labelsFontFamily": [
    "Labels Font Family",
    ""
  ],
  "labelsColor": [
    "Labels Color",
    ""
  ],
  "formatString": [
    "Format String",
    ""
  ],
  "maximum": [
    "Maximum",
    ""
  ],
  "minimum": [
    "Minimum",
    ""
  ],
  "majorTicksCount": [
    "Major Ticks Count",
    ""
  ],
  "percentRadius": [
    "Percent Radius",
    ""
  ],
  "percentOriginY": [
    "Percent Origin Y",
    ""
  ],
  "percentOriginX": [
    "Percent Origin X",
    ""
  ],
  "angleTo": [
    "Angle To",
    ""
  ],
  "angleFrom": [
    "Angle From",
    ""
  ],
  "minorTickStrokeWidth": [
    "Minor Tick Stroke Width",
    ""
  ],
  "minorTickStroke": [
    "Minor Tick Stroke",
    ""
  ],
  "offsetRight": [
    "Offset Right",
    ""
  ],
  "offsetLeft": [
    "Offset Left",
    ""
  ],
  "scaleType": [
    "Scale Type",
    ""
  ],
  "showFullTime": [
    "Show Full Time",
    ""
  ],
  "showRange": [
    "Show Range",
    ""
  ],
  "showYear": [
    "Show Year",
    ""
  ],
  "showMonth": [
    "Show Month",
    ""
  ],
  "showRelative": [
    "Show Relative",
    ""
  ],
  "showWeek": [
    "Show Week",
    ""
  ],
  "showDay": [
    "Show Day",
    ""
  ],
  "firstDow": [
    "First Dow",
    ""
  ],
  "dowNames": [
    "Dow Names",
    ""
  ],
  "monthNames": [
    "Month Names",
    ""
  ],
  "yField": [
    "Y Field",
    ""
  ],
  "xField": [
    "X Field",
    ""
  ],
  "radius": [
    "Radius",
    ""
  ],
  "longitude": [
    "Longitude",
    ""
  ],
  "latitude": [
    "Latitude",
    ""
  ],
  "maxCharLength": [
    "Max Char Length",
    "Specifies the maximum number of characters allowed in this text component."
  ],
  "letterSpacing": [
    "Letter Spacing",
    "Specifies the horizontal spacing between letters. If null, the default spacing for the selected font is used."
  ],
  "liveUpdate": [
    "Live Update",
    ""
  ],
  "wordWrap": [
    "Word Wrap",
    "Defines whether overflow text wraps. Mulitline must be enabled for this property to take effect."
  ],
  "verticalAlign": [
    "Vertical Alignment",
    "Defines whether the content in this component is positioned at the top, middle, or bottom of the container."
  ],
  "textAlign": [
    "Horizontal Alignment",
    "Defines whether the content in this component is left-justified, centered, or right-justified."
  ],
  "textDecoration": [
    "Text Decoration",
    ""
  ],
  "fontWeight": [
    "Font Weight",
    ""
  ],
  "fontStyle": [
    "Font Style",
    ""
  ],
  "fontSize": [
    "Font Size",
    "Defines the font size for this component. If the font size value is set to Auto, the text scales to occupy the size of the component."
  ],
  "minFontSize": [
    "Min Font Size",
    "Defines the minimum font size for this text component. This property is only applicable when text size is set to Auto."
  ],
  "maxFontSize": [
    "Max Font Size",
    "Defines the maximum font size for this text component. This property is only applicable when text size is set to Auto."
  ],
  "lineHeight": [
    "Line Spacing",
    "Specifies the vertical spacing between lines. If 0, the default spacing for the selected font is used."
  ],
  "fontFamily": [
    "Font Family",
    ""
  ],
  "textDir": [
    "Text Dir",
    ""
  ],
  "text": [
    "Text",
    "Sets or reflects the string that appears in the Text component."
  ],
  "autoSize": [
    "Auto Size",
    ""
  ],
  "!isWidget": [
    " Widget  Group",
    ""
  ],
"scrollbarStyles.width": [
    "Scrollbar Width",
    ""
  ],
  "@onScroll": [
    "On Scroll",
    ""
  ],
  "deselectChildOnClick": [
    "Deselect Child On Click",
    ""
  ],
  "selectChildOnClick": [
    "Select Child On Click",
    ""
  ],
  "multiSelect": [
    "Multi Select",
    ""
  ],
  "selectedIndex": [
    "Selected Index",
    "<p>Sets or returns the index of the selected item in this container.</p><p>The first item has an index of 0.</p><p>The value −1 deselects all items.</p><p>If Multi-Select is enabled and multiple items are selected, comma-separated values are returned.</p>"
  ],
  "symbol": [
    "Symbol",
    "Specifies the symbol to be used when iterating the rows of the linked table."
  ],
  "contentHeight": [
    "Content Height",
    ""
  ],
  "contentWidth": [
    "Content Width",
    ""
  ],
  "keepEqualPaddings": [
    "Link Paddings",
    "Links all four padding editors so that their values are equal."
  ],
  "paddingRight": [
    "Right Padding",
    "Defines a number of pixels of space between the right container boundary and the rightmost edge of the content. Negative numbers are not allowed."
  ],
  "paddingLeft": [
    "Left Padding",
    "Defines a number of pixels of space between the left container boundary and the leftmost edge of the content. Negative numbers are not allowed."
  ],
  "paddingBottom": [
    "Bottom Padding",
    "Defines a number of pixels of space between the bottom container boundary and the bottommost edge of the content. Negative numbers are not allowed."
  ],
  "paddingTop": [
    "Top Padding",
    "Defines a number of pixels of space between the top container boundary and the topmost edge of the content. Negative numbers are not allowed."
  ],
  "scrollFeedback": [
    "Scroll Feedback",
    ""
  ],
  "scrollY": [
    "Scroll Y",
    ""
  ],
  "scrollX": [
    "Scroll X",
    ""
  ],
  "vScroll": [
    "Vertical Scrolling",
    "<p>Defines scrolling behavior on this element.</p>\n<p><strong>Off</strong><br />\nScrolling always disabled.</p>\n<p><strong>On</strong><br />\nScrolling always enabled. The track appears even if the content does not overflow.</p>\n<p><strong>Auto</strong><br />\nScrolling automatically gets enabled when content overflows.</p>"
  ],
  "hScroll": [
    "Horizontal Scrolling",
    "<p>Defines scrolling behavior on this element.</p>\n<p><strong>Off</strong><br />\nScrolling always disabled.</p>\n<p><strong>On</strong><br />\nScrolling always enabled. The track appears even if the content does not overflow.</p>\n<p><strong>Auto</strong><br />\nScrolling automatically gets enabled when content overflows.</p>"
  ],
  "hGap": [
    "H Gap",
    ""
  ],
  "vGap": [
    "V Gap",
    ""
  ],
  "vAlign": [
    "Vertical Alignment",
    ""
  ],
  "hAlign": [
    "Horizontal Alignment",
    ""
  ],
  "reverseZIndex": [
    "Reverse Z Index",
    ""
  ],
  "scaleContent": [
    "Scale Content",
    ""
  ],
  "autoSizeContent": [
    "Auto Size Content",
    ""
  ],
  "clipContent": [
    "Clip Content",
    "<p>Defines the handling of content that overflows this container.</p>\n<p><strong>True</strong><br />\nAll overflowed content is clipped and is not visible.</p>\n<p><strong>False</strong><br />\nAll overflowed content is visible and responds to mouse events.</p>"
  ],
  "layout": [
    "Layout",
    "<p>Defines how elements are positioned within this container.</p>\n<p><strong>Absolute</strong><br />\nElements positioned freely.</p>\n<p><strong>Horizontal</strong><br />\nElements positioned in order horizontally left to right.</p>\n<p><strong>Vertical</strong><br />\nElements positioned in order vertically top to bottom.</p>"
  ],
  "alignContent": [
    "Tile Alignment",
    "<p>Defines positioning of  the columns and rows containing wrapped elements within this container.</p>
<p><strong>Flex-start</strong><br />
Elements positioned at the start of the container.The rows are packed against the top edge, or the columns are packed against the left edge.</p>
<p><strong>Flex-end</strong><br />
Elements positioned at the end of the container.The rows are packed against the bottom edge, or the columns are packed against the right edge.</p>
<p><strong>Center</strong><br />
Elements positioned at the center.The rows or columns are packed together around the center of the container.</p>
<p><strong>Space-between</strong><br />
Elements positioned such that there are equal amounts of space in between them (when multiple elements exist). The rows or columns are positioned against both edges, with equal space between them.</p>
<p><strong>Space-around</strong><br />
Elements positioned such that there is an equal amount of space surrounding them (where multiple elements exist). The rows or columns are positioned with equal space between them, and space along both edges equal to half of the space between two rows or columns.</p>
<p><strong>Stretch</strong><br />
Elements are stretched to fit the parent container.The rows or columns stretch to fit the parent container.</p>"
  ],
  "flexWrap": [
    "Wrap",
    ""
  ],
  "alignItems": [
    "Vertical Alignment",
    "<p>Defines vertical positioning of all elements within this container.</p>\n<p><strong>Flex-start</strong><br />\nElements positioned on the top. Elements are packed against the top edge.</p>\n<p><strong>Flex-end</strong><br />\nElements positioned on the bottom. Elements are packed against the bottom edge.</p>\n<p><strong>Center</strong><br />\nElements positioned at the center. Elements are packed together around the vertical center.</p>\n<p><strong>Space-between*</strong><br />\nElements positioned such that there are equal amounts of space in between them (when multiple elements exist). Elements are distributed with the top element flush against the top edge, the bottom element flush against the bottom edge, and equal space between the items.</p>\n<p><strong>Space-around*</strong><br />\nElements positioned such that there is an equal amount of space surrounding them (where multiple elements exist). Elements are distributed with equal space between them. The space at the top and bottom of the container equals half of the space between two adjacent items.</p>\n<p><strong>Baseline**</strong><br />\nBaseline of all elements aligned to the baseline of the parent container.</p>\n<p><strong>Stretch**</strong><br />\nElements are stretched to fit the parent container. Elements stretch vertically to fit the parent container. The elements must have Autosize enabled in the direction that they stretch.</p>\n<p><strong>*</strong>Only available when Layout property is set to Vertical<br />\n<strong>**</strong>Only available when Layout property is set to Horizontal</p>"
  ],
  "justifyContent": [
    "Horizontal Alignment",
    "<p>Defines horizontal positioning of all elements within this container.</p>\n<p><strong>Flex-start</strong><br />\nElements positioned on the left. Elements are packed against the left edge.</p>\n<p><strong>Flex-end</strong><br />\nElements positioned on the right. Elements are packed against the right edge.</p>\n<p><strong>Center</strong><br />\nElements positioned at the center. Elements are packed together around the horizontal center.</p>\n<p><strong>Space-between*</strong><br />\nElements positioned such that there are equal amounts of space in between them (when multiple elements exist). Elements are distributed with the left element flush against the left edge, the right element flush against the right edge, and equal space between the items.</p>\n<p><strong>Space-around*</strong><br />\nElements positioned such that there is an equal amount of space surrounding them (where multiple elements exist). Elements are distributed with equal space between them. The space at the left and right of the container equals half of the space between two adjacent items.</p>\n<p><strong>Baseline**</strong><br />\nBaseline of all elements aligned to the baseline of the parent container.</p>\n<p><strong>Stretch**</strong><br />\nElements are stretched to fit the parent container. Elements stretch horizontally to fit the parent container. The elements must have Autosize enabled in the direction that they stretch.</p>\n<p><strong>*</strong>Only available when Layout property is set to Horizontal<br />\n<strong>**</strong>Only available when Layout property is set to Vertical</p>"
  ],
  "filters": [
    "Filters",
    ""
  ],
  "shadows": [
    "Shadows",
    "Attaches one or more shadows to this component."
  ],
  "bottomRightRadius": [
    "Bottom Right Radius",
    ""
  ],
  "bottomLeftRadius": [
    "Bottom Left Radius",
    ""
  ],
  "topRightRadius": [
    "Top Right Radius",
    ""
  ],
  "topLeftRadius": [
    "Top Left Radius",
    ""
  ],
  "cornerRadius": [
    "Corner Radius",
    ""
  ],
  "complexCornerRadius": [
    "Complex Corner Radius",
    ""
  ],
  "roundedCornersEditable": [
    "Rounded Corners Editable",
    ""
  ],
  "editorComplexCornerRadius": [
    "Editor Complex Corner Radius",
    ""
  ],
  "borderStyle": [
    "Stroke Style",
    "Defines the line style of stroke for this component."
  ],
  "backgroundImageTransition": [
    "Background Image Transition",
    ""
  ],
  "borderWidth": [
    "Stroke Weight",
    "Defines the weight of the stroke line for this component."
  ],
  "border": [
    "Stroke",
    "Defines the stroke for this element."
  ],
  "background": [
    "Fill",
    "Defines the fill for this element."
  ],
  "calCacheSymbol": [
    "Callout  Cache  Symbol",
    "Specifies whether to cache the callout symbol after it has been loaded the first time."
  ],
  "calVisible": [
    "Is  Callout  Visible",
    "Returns whether the callout is currently visible. For example, a mouse-over callout is visible only when the user mouses over the component."
  ],
  "calGrayOutComp": [
    "Gray  Out  Component",
    "Defines whether the callout’s target becomes inactive and faded when the modal callout is displayed."
  ],
  "calModalFill": [
    "Modal  Callout  Fill",
    "Specifies the background fill that appears when a modal callout is visible."
  ],
  "calModal": [
    " Modal  Callout",
    ""
  ],
  "calTimeout": [
    " Callout  Timeout",
    ""
  ],
  "calHideIfOver": [
    "Hide  If  Over",
    "Determines whether the callout disappears when the user mouses over the callout."
  ],
  "calHide": [
    "Hide  Callout",
    "Hides the callout. You can bind data or properties to this button, or click it as part of a recorded action."
  ],
  "calShow": [
    "Show  Callout",
    "Shows the callout. You can bind data or properties to this button, or click it as part of a recorded action."
  ],
  "calAnimation": [
    " Callout  Animation",
    ""
  ],
  "calSpeed": [
    " Callout  Speed",
    ""
  ],
  "calStrokeWidth": [
    " Callout Bond Weight",
    "Defines the stroke weight of the static callout’s bond."
  ],
  "calStrokeType": [
    "Bond Stroke Type",
    "Defines the stroke type for the static callout’s bond."
  ],
  "calBondColor": [
    " Callout  Bond  Color",
    ""
  ],
  "calBondType": [
    "Cal Bond Type",
    ""
  ],
  "calAutosize": [
    " Callout  Autosize",
    ""
  ],
  "calH": [
    " Callout  Height",
    ""
  ],
  "calW": [
    " Callout  Width",
    ""
  ],
  "calY": [
    "Callout  Y  Offset",
    "The Y Offset of a callout is the vertical distance from the top edge of the callout to the top edge of its target. You cannot manually set the Y Offset if the position of the callout is set as relative."
  ],
  "calX": [
    "Callout  X  Offset",
    "The X Offset of a callout is the horizontal distance from the left edge of the callout to the left edge of its target. You cannot manually set the X Offset if the position of the callout is set as relative."
  ],
  "calRelTarget": [
    " Callout  Relative  To",
    "Specifies whether the callout’s relative position (X and Y offsets) and size are relative to the callout's target component or to the page."
  ],
  "calPos": [
    " Callout position",
    ""
  ],
  "calType": [
    " Callout  Type",
    ""
  ],
  "calloutSymbolId": [
    "Symbol",
    "Specifies the symbol to use for the callout. If the symbol is in this project, enter the name of the symbol. To use a symbol from another project in your library, enter the full path to that symbol."
  ],
  "rotateY": [
    "Rotation Y",
    "Defines a 3-D rotation along the y-axis. The value is an angle in degrees."
  ],
  "rotateX": [
    "Rotation X",
    "Defines a 3-D rotation along the x-axis. The value is an angle in degrees."
  ],
  "perspectiveOriginY": [
    "Perspective Origin Y",
    ""
  ],
  "perspectiveOriginX": [
    "Perspective Origin X",
    ""
  ],
  "transformOriginY": [
    "Transform Origin Y",
    ""
  ],
  "transformOriginX": [
    "Transform Origin X",
    ""
  ],
  "scaleY": [
    "Scale Y",
    ""
  ],
  "scaleX": [
    "Scale X",
    ""
  ],
  "shear": [
    "Shear",
    ""
  ],
  "rotate": [
    "Rotation",
    "Defines a 2-D rotation. The value is an angle in degrees."
  ],
  "translateY": [
    "Translate Y",
    ""
  ],
  "translateX": [
    "Translate X",
    ""
  ],
  "perspective": [
    "Perspective",
    ""
  ],
  "preserve3d": [
    "Preserve3d",
    ""
  ],
  "hideBackFace": [
    "Hide Back Face",
    ""
  ],
  "useGpu": [
    "Use Gpu",
    ""
  ],
  "clickOn": [
    "Click on",
    ""
  ],
  "@onMouseWheel": [
    "On Mouse Wheel",
    ""
  ],
  "@onClickOff": [
    "On Click Off",
    ""
  ],
  "@onClickOn": [
    "On Click On",
    ""
  ],
  "@onRightClick": [
    "On Right Click",
    ""
  ],
  "@onDoubleClick": [
    "On Double Click",
    ""
  ],
  "@onMouseMove": [
    "On Mouse Move",
    ""
  ],
  "@onMouseLeave": [
    "On Mouse Leave",
    ""
  ],
  "@onMouseEnter": [
    "On Mouse Enter",
    ""
  ],
  "@onMouseMoveGlobal": [
    "On Mouse Move Global",
    ""
  ],
  "@onMouseUpGlobal": [
    "On Mouse Up Global",
    ""
  ],
  "@onMouseUp": [
    "On Mouse Up",
    ""
  ],
  "@onMouseDown": [
    "On Mouse Down",
    ""
  ],
  "@onClick": [
    "On Click",
    ""
  ],
  "@onCreate": [
    "On Create",
    ""
  ],
  "@onDragDrop": [
    "On Drag Drop",
    ""
  ],
  "@onDragLeave": [
    "On Drag Leave",
    ""
  ],
  "@onDragOver": [
    "On Drag Over",
    ""
  ],
  "@onDragEnd": [
    "On Drag End",
    ""
  ],
  "@onDragStart": [
    "On Drag Start",
    ""
  ],
  "dragSymbol": [
    "Drag Symbol",
    ""
  ],
  "dropGroup": [
    "Drop Group",
    ""
  ],
  "dragGroup": [
    "Drag Group",
    ""
  ],
  "droppable": [
    "Droppable",
    ""
  ],
  "draggable": [
    "Draggable",
    ""
  ],
  "@onKeyUp": [
    "On Key Up",
    ""
  ],
  "@onKeyDown": [
    "On Key Down",
    ""
  ],
  "!paletteIcon": [
    "Palette Icon",
    ""
  ],
  "keyboardCapture": [
    "Keyboard Capture",
    ""
  ],
  "unfocus": [
    "Unfocus",
    ""
  ],
  "focus": [
    "Focus",
    ""
  ],
  "focused": [
    "Focused",
    ""
  ],
  "focusType": [
    "Focus Type",
    ""
  ],
  "focusable": [
    "Focusable",
    ""
  ],
  "@index": [
    "Index",
    ""
  ],
  "selected": [
    "Selected",
    ""
  ],
  "moveToTop": [
    "Move To Top",
    ""
  ],
  "triggerAutoSize": [
    "On Auto Size",
    ""
  ],
  "cursor": [
    "Cursor",
    "Defines which cursor to show when mousing over this element. Only works when the Mouse Enabled property is true for both the element and its parents."
  ],
  "clickThrough": [
    "Click Through",
    ""
  ],
  "mouseEnabled": [
    "Mouse Enabled",
    "Defines whether this element responds to mouse events."
  ],
  "tooltip": [
    "Tooltip",
    ""
  ],
  "display": [
    "Display",
    ""
  ],
"!label": [
    "Name",
    "Defines the display name of this component. This name appears in the Outline and breadcrumbs in DGLux."
  ],
  "visibility": [
    "Visibility",
    ""
  ],
  "followPathBaseRotation": [
    "Follow Path Base Rotation",
    ""
  ],
  "followPathPosition": [
    "Follow Path Position",
    ""
  ],
  "followPathRotationEnabled": [
    " Follow  Path  Rotation",
    ""
  ],
  "followFor": [
    "Follow For",
    ""
  ],
  "alignSelf": [
    "Align Self",
    ""
  ],
  "maxHeight": [
    "Max Height",
    ""
  ],
  "maxWidth": [
    "Max Width",
    ""
  ],
  "minHeight": [
    "Min Height",
    ""
  ],
  "minWidth": [
    "Min Width",
    ""
  ],
  "keepAspectRatio": [
    "Keep Aspect Ratio",
    ""
  ],
  "height": [
    "Height",
    ""
  ],
  "flexShrink": [
    "Flex-Shrink",
    "<p>Specifies how much this element will shrink relative to the rest of the flexible items inside the same container. A value greater than zero indicates that this component will shrink to counteract insufficient space. The amount that it will shrink depends on its flex-shrink factor and the sum of all the flex-shrink factors assigned to items in the container.</p>
<p>For more information on flexible items go to: <a href="http://bocoup.com/weblog/dive-into-flexbox/">http://bocoup.com/weblog/dive-into-flexbox/</a></p>"
  ],
  "flexGrow": [
    "Flex-Grow",
    "<p>Specifies how much this element will grow relative to the rest of the flexible items inside the same container. A value greater than zero indicates that this component will grow to absorb extra space. The amount that it will grow depends on its flex-grow factor and the sum of all the flex-grow factors assigned to items in the container.</p>
<p>For more information on flexible items go to: <a href="http://bocoup.com/weblog/dive-into-flexbox/">http://bocoup.com/weblog/dive-into-flexbox/</a></p>"
  ],
  "vCenter": [
    "V Center",
    ""
  ],
  "hCenter": [
    "H Center",
    ""
  ],
  "bottom": [
    "Bottom",
    "<p>In absolute layout, sets the bottom edge of this element to a distance above or below the bottom edge of its parent container.</p><p>In vertical or horizontal layout, sets the bottom edge of this element to a distance above or below its normal position.</p><p>A value of Auto positions the bottom edge of this component in its normal position.</p>"
  ],
  "right": [
    "Right",
    "<p>In absolute layout, sets the right edge of this element to a distance to the left or right of the right edge of its parent container.</p><p>In vertical or horizontal layout, sets the right edge of this element to a distance to the left or right of its normal position.</p><p>A value of Auto positions the right edge of this component in its normal position.</p>"
  ],
  "top": [
    "Top",
    "<p>In absolute layout, sets the top edge of this element to a distance above or below the top edge of its parent container.</p><p>In vertical or horizontal layout, sets the top edge of this element to a distance above or below its normal position.</p><p>A value of Auto positions the top edge of this component in its normal position.</p>"
  ],
  "left": [
    "Left",
    "<p>In absolute layout, sets the left edge of this element to a distance to the left or right of the left edge of its parent container.</p><p>In vertical or horizontal layout, sets the left edge of this element to a distance to the left or right of its normal position.</p><p>A value of Auto positions the left edge of this component in its normal position.</p>"
  ],
  "type": [
    "Type",
    ""
  ],
  "delta": [
    "Delta",
    ""
  ],
  "header": [
    "Header",
    ""
  ],
  "rollup": [
    "Rollup",
    ""
  ],
  "dataInterval": [
    "Data Interval",
    ""
  ],
  "timeRange": [
    "Time Range",
    ""
  ],
  "status": [
    "Status",
    ""
  ],
  "unit": [
    "Unit",
    ""
  ],
  "default": [
    "Default",
    ""
  ],
  "mapping": [
    "Mapping",
    ""
  ],
  "scaleOutputMax": [
    "Output max",
    ""
  ],
  "scaleOutputMin": [
    "Output min",
    ""
  ],
  "scaleInputMax": [
    "Input max",
    ""
  ],
  "scaleInputMin": [
    "Input min",
    ""
  ],
  "offsetVal": [
    " Offset  Value",
    ""
  ],
  "offset": [
    "Offset",
    ""
  ],
  "expression": [
    "Expression",
    ""
  ],
  "service": [
    "Service",
    ""
  ],
  "fileName": [
    "File Name",
    ""
  ],
  "dragData": [
    "Drag Data",
    ""
  ],
  "event": [
    "Event",
    ""
  ],
  "fastResponse": [
    "Fast Response",
    ""
  ],
  "active": [
    "Active",
    "The Active property sets or returns whether the animation is currently running."
  ],
  "mode": [
    "Mode",
    ""
  ],
  "filter": [
    "Filter",
    ""
  ],
  "loading": [
    "Loading",
    ""
  ],
  "timeout": [
    "Timeout",
    ""
  ],
  "error": [
    "Error",
    ""
  ],
  "onComplete": [
    "On Complete",
    ""
  ],
  "path": [
    "Path",
    ""
  ],
  "strengthBack": [
    "Strength Back",
    ""
  ],
  "easingBack": [
    "Easing Back",
    ""
  ],
  "strength": [
    "Strength",
    ""
  ],
  "easing": [
    "Easing",
    ""
  ],
  "value": [
    "Value",
    ""
  ],
  "durationBack": [
    "Duration Back",
    ""
  ],
  "revert": [
    "Revert",
    ""
  ],
  "width": [
    "Width",
    ""
  ],
  "opacity": [
    "Opacity",
    "Defines opacity of this component. If this component is a group or container, all elements inside are affected."
  ],
  "url": [
    "Url",
    ""
  ],
  "tilingOpt": [
    "Tiling Opt",
    ""
  ],
  "gradient": [
    "Gradient",
    ""
  ],
  "selector": [
    "Selector",
    ""
  ],
  "parseError": [
    "Parse Error",
    ""
  ],
  "table": [
    "Table",
    ""
  ],
  "roundTime": [
    "Round Time",
    ""
  ],
  "valueRollup": [
    "Value Rollup",
    ""
  ],
  "method": [
    "Method",
    ""
  ],
  "field": [
    "Column",
    ""
  ],
  "data": [
    "Data",
    "Specifies the table for the repeater to use as the data source."
  ],
  "loop": [
    "Loop",
    ""
  ],
  "step": [
    "Step",
    ""
  ],
  "interval": [
    "Interval",
    ""
  ],
  "enabled": [
    "Enabled",
    ""
  ],
  "z": [
    "Z",
    ""
  ],
  "y": [
    "Y",
    ""
  ],
  "x": [
    "X",
    ""
  ],
  "w": [
    "W",
    ""
  ],
  "h": [
    "H",
    ""
  ],
  "print": [
    "Print",
    ""
  ],
  "autoRun": [
    "Auto Run",
    ""
  ],
  "invoke": [
    "Invoke",
    ""
  ],
  "order": [
    "Order",
    ""
  ],
  "reset": [
    "Reset",
    ""
  ],
  "onChange": [
    "On Change",
    ""
  ],
  "else": [
    "Else",
    ""
  ],
  "duration": [
    "Duration",
    ""
  ],
  "formatted": [
    "Formatted",
    ""
  ],
  "op": [
    "Op",
    ""
  ],
  "millisecond": [
    "Millisecond",
    ""
  ],
  "second": [
    "Second",
    ""
  ],
  "minute": [
    "Minute",
    ""
  ],
  "hour": [
    "Hour",
    ""
  ],
  "day": [
    "Day",
    ""
  ],
  "month": [
    "Month",
    ""
  ],
  "year": [
    "Year",
    ""
  ],
  "format": [
    "Format",
    ""
  ],
  "color": [
    "Font Color",
    "Defines the font color for this component."
  ],
  "start": [
    "Start",
    ""
  ],
  "length": [
    "Length",
    ""
  ],
  "max": [
    "Max",
    ""
  ],
  "min": [
    "Min",
    ""
  ],
  "inputOutOfRange": [
    "Input Out Of Range",
    ""
  ],
  "precision": [
    "Precision",
    ""
  ],
  "modulo": [
    "Modulo",
    ""
  ],
  "input": [
    "Input",
    ""
  ],
  "output": [
    "Output",
    ""
  ],
  "add.0": [
    "Input 0",
    ""
  ],
  "subtract.0": [
    "Input 0",
    ""
  ],
  "multiply.0": [
    "Input 0",
    ""
  ],
  "divide.0": [
    "Input 0",
    ""
  ],
  "max.0": [
    "Input 0",
    ""
  ],
  "min.0": [
    "Input 0",
    ""
  ],
  "modulo.quotient": [
    "Quotient",
    ""
  ],
  "modulo.remainder": [
    "Remainder",
    ""
  ],
  "log.base": [
    "Base",
    ""
  ],
  "power.power": [
    "Power",
    ""
  ],
  "root.root": [
    "Root",
    ""
  ],
  "average.0": [
    "Input 0",
    ""
  ],
  "median.0": [
    "Input 0",
    ""
  ],
  "mode.0": [
    "Input 0",
    ""
  ],
  "variance.0": [
    "Input 0",
    ""
  ],
  "stdDeviation.0": [
    "Input 0",
    ""
  ],
  "scale.inputMin": [
    "Input Min",
    ""
  ],
  "scale.inputMax": [
    "Input Max",
    ""
  ],
  "scale.outputMin": [
    "Output Min",
    ""
  ],
  "scale.outputMax": [
    "Output Max",
    ""
  ],
  "concat.0": [
    "Input 0",
    ""
  ],
  "concat.strict": [
    "Strict",
    ""
  ],
  "substring.end": [
    "End",
    ""
  ],
  "replace.regexp": [
    "Regexp",
    ""
  ],
  "replace.0": [
    "Find 0",
    ""
  ],
  "replace.1": [
    "Replace 0",
    ""
  ],
  "label.label": [
    "Label",
    ""
  ],
  "label.borderColor": [
    "Border Color",
    ""
  ],
  "label.align": [
    "Align",
    ""
  ],
  "datetime.isUTC": [
    "Is U T C",
    ""
  ],
  "parseDateTime.time": [
    "Time",
    ""
  ],
  "parseDateTime.weekday": [
    "Weekday",
    ""
  ],
  "dateRange.nextRange": [
    "Next Range",
    ""
  ],
  "dateRange.thisRange": [
    "This Range",
    ""
  ],
  "dateRange.previousRange": [
    "Previous Range",
    ""
  ],
  "dateRange.next": [
    "Next",
    ""
  ],
  "dateRange.previous": [
    "Previous",
    ""
  ],
  "dateRange.rangeDelimiter": [
    "Range Delimiter",
    ""
  ],
  "dateRange.keepSpecial": [
    "Keep Special",
    ""
  ],
  "if.0": [
    "Input 0",
    ""
  ],
  "if.then": [
    "Then",
    ""
  ],
  "case.0": [
    "Case 0",
    ""
  ],
  "case.1": [
    "Then 0",
    ""
  ],
  "hub.0": [
    "Input 0",
    ""
  ],
  "hub.index": [
    "Index",
    ""
  ],
  "eventGate.logOrder": [
    "Log Order",
    ""
  ],
  "eventGate.0": [
    "Input 0",
    ""
  ],
  "eventGate.onFinish": [
    "On Finish",
    ""
  ],
  "script.script": [
    "Script",
    ""
  ],
  "script.a": [
    "A",
    ""
  ],
  "script.b": [
    "B",
    ""
  ],
  "script.c": [
    "C",
    ""
  ],
  "script.d": [
    "D",
    ""
  ],
  "script.e": [
    "E",
    ""
  ],
  "script.f": [
    "F",
    ""
  ],
  "script.g": [
    "G",
    ""
  ],
  "script.i": [
    "I",
    ""
  ],
  "script.j": [
    "J",
    ""
  ],
  "script.k": [
    "K",
    ""
  ],
  "script.l": [
    "L",
    ""
  ],
  "script.m": [
    "M",
    ""
  ],
  "script.n": [
    "N",
    ""
  ],
  "script.o": [
    "O",
    ""
  ],
  "script.p": [
    "P",
    ""
  ],
  "script.q": [
    "Q",
    ""
  ],
  "script.r": [
    "R",
    ""
  ],
  "script.s": [
    "S",
    ""
  ],
  "script.t": [
    "T",
    ""
  ],
  "script.u": [
    "U",
    ""
  ],
  "script.v": [
    "V",
    ""
  ],
  "stopwatch.onLoop": [
    "On Loop",
    ""
  ],
  "table.save": [
    "Save",
    ""
  ],
  "tableFilter.condition": [
    "Condition",
    ""
  ],
  "tableRollup.dateColumn": [
    "Date Column",
    ""
  ],
  "tableRollup.valueColumn": [
    "Value Column",
    ""
  ],
  "tableJoin.input1": [
    "Input1",
    ""
  ],
  "tableJoin.input2": [
    "Input2",
    ""
  ],
  "tableJoin.field1": [
    "Column1",
    ""
  ],
  "tableJoin.field2": [
    "Column2",
    ""
  ],
  "tableJoin.join": [
    "Join",
    ""
  ],
  "tableJoin.renameColumns": [
    "Rename Columns",
    ""
  ],
  "tablePage.pageSize": [
    "Page Size",
    ""
  ],
  "tablePage.nextPage": [
    "Next Page",
    ""
  ],
  "tablePage.prevPage": [
    "Prev Page",
    ""
  ],
  "tablePage.firstPage": [
    "First Page",
    ""
  ],
  "tablePage.lastPage": [
    "Last Page",
    ""
  ],
  "tablePage.currentPage": [
    "Current Page",
    ""
  ],
  "tablePage.totalPage": [
    "Total Page",
    ""
  ],
  "tableSelectRows.indexes": [
    "Indexes",
    ""
  ],
  "tableAggregation.column": [
    "Column",
    ""
  ],
  "tableColumnMapping.retainColumns": [
    "Retain Columns",
    ""
  ],
  "tableColumnMapping.0": [
    "Name 0",
    ""
  ],
  "tableColumnMapping.1": [
    "From 0",
    ""
  ],
  "tableGroupBy.baseColumn": [
    "Base Column",
    ""
  ],
  "tableGroupBy.nestedData": [
    "Nested Data",
    ""
  ],
  "tableGroupBy.includeBlankValue": [
    "Include Blank Value",
    ""
  ],
  "tableGroupBy.0": [
    "Column 0",
    ""
  ],
  "tableGroupBy.1": [
    "Method 0",
    ""
  ],
  "tableGroupBy.2": [
    "Out Column 0",
    ""
  ],
  "tableRowCells.row": [
    "Row",
    ""
  ],
  "tableRowCells.0": [
    "Column 0",
    ""
  ],
  "tableRowCells.1": [
    "Value 0",
    ""
  ],
  "tableTranspose.ignoreColumns": [
    "Ignore Columns",
    ""
  ],
  "tableTranspose.includeHeaders": [
    "Include Headers",
    ""
  ],
  "tableTranspose.headerPrefix": [
    "Header Prefix",
    ""
  ],
  "jsonParser.drillDownDepth": [
    "Drill Down Depth",
    ""
  ],
  "jsonParser.drillDownFilter": [
    "Drill Down Filter",
    ""
  ],
  "jsonParser.flatFilter": [
    "Flat Filter",
    ""
  ],
  "csvParser.withHeader": [
    "With Header",
    ""
  ],
  "csvParser.delimiter": [
    "Delimiter",
    ""
  ],
  "fill.gradientType": [
    "Gradient Type",
    ""
  ],
  "fill.angle": [
    "Angle",
    ""
  ],
  "fill.fillType": [
    "Fill Type",
    ""
  ],
  "fill.gradientShapeCircle": [
    "Gradient Shape Circle",
    ""
  ],
  "fill.gradientSize": [
    "Gradient Size",
    ""
  ],
  "fill.gradientCenterX": [
    "Gradient Center X",
    ""
  ],
  "fill.gradientCenterY": [
    "Gradient Center Y",
    ""
  ],
  "fill.gradientSizeX": [
    "Gradient Size X",
    ""
  ],
  "fill.gradientSizeY": [
    "Gradient Size Y",
    ""
  ],
  "border.borderLeft": [
    "Border Left",
    ""
  ],
  "border.borderRight": [
    "Border Right",
    ""
  ],
  "border.borderTop": [
    "Border Top",
    ""
  ],
  "border.borderBottom": [
    "Border Bottom",
    ""
  ],
  "border.style": [
    "Style",
    ""
  ],
  "gradientStop.ratio": [
    "Ratio",
    ""
  ],
  "gradientStop.alpha": [
    "Alpha",
    ""
  ],
  "setState.0": [
    "Path 0",
    ""
  ],
  "setState.1": [
    "Value 0",
    ""
  ],
  "setState.2": [
    "Original 0",
    ""
  ],
  "changeState.0": [
    "Path 0",
    ""
  ],
  "changeState.1": [
    "Change 0",
    ""
  ],
  "changeState.onFinished": [
    "On Finished",
    ""
  ],
  "changeState.onReverted": [
    "On Reverted",
    ""
  ],
  "stateItem.original": [
    "Original",
    ""
  ],
  "strLoader.headers": [
    "Headers",
    ""
  ],
  "strLoader.sendCookies": [
    "Send Cookies",
    ""
  ],
  "strLoader.respHeaders": [
    "Resp Headers",
    ""
  ],
  "jsonpLoader.callback": [
    "Callback",
    ""
  ],
  "mouseEventData.pageX": [
    "Page X",
    ""
  ],
  "mouseEventData.pageY": [
    "Page Y",
    ""
  ],
  "mouseEventData.dragSource": [
    "Drag Source",
    ""
  ],
  "keyboardEventData.charCode": [
    "Char Code",
    ""
  ],
  "keyboardEventData.keyCode": [
    "Key Code",
    ""
  ],
  "keyboardEventData.ctrl": [
    "Ctrl",
    ""
  ],
  "keyboardEventData.alt": [
    "Alt",
    ""
  ],
  "keyboardEventData.shift": [
    "Shift",
    ""
  ],
  "keyboardEventData.meta": [
    "Meta",
    ""
  ],
  "scrollEventData.scrollLeft": [
    "Scroll Left",
    ""
  ],
  "scrollEventData.scrollTop": [
    "Scroll Top",
    ""
  ],
  "scrollEventData.scrollWidth": [
    "Scroll Width",
    ""
  ],
  "scrollEventData.scrollHeight": [
    "Scroll Height",
    ""
  ],
  "queryBinding.0": [
    "Case 0",
    ""
  ],
  "queryBinding.1": [
    "Then 0",
    ""
  ],
  "valueBinding.0": [
    "Case 0",
    ""
  ],
  "valueBinding.1": [
    "Then 0",
    ""
  ],
  "relativize.serviceId": [
    "Service Id",
    ""
  ],
  "relativize.fullPath": [
    "Full Path",
    ""
  ],
  "loadValue.lastUpdate": [
    "Last Update",
    ""
  ],
  "invokeAction.action": [
    "Action",
    ""
  ],
  "invokeAction.getTable": [
    "Get Table",
    ""
  ],
  "invokeAction.bufferSize": [
    "Buffer Size",
    ""
  ],
  "dbQuery.db": [
    "Db",
    ""
  ],
  "dbQuery.query": [
    "Query",
    ""
  ],
  "getNode.name": [
    "Name",
    ""
  ],
  "getNode.hasChildren": [
    "Has Children",
    ""
  ],
  "getNode.hasValue": [
    "Has Value",
    ""
  ],
  "getNode.hasHistory": [
    "Has History",
    ""
  ],
  "getNode.icon": [
    "Icon",
    ""
  ],
  "getNode.enum": [
    "Enum",
    ""
  ],
  "getNode.actions": [
    "Actions",
    ""
  ],
  "loadHistories.paths": [
    "Paths",
    ""
  ],
  "loadHistories.showStatus": [
    "Show Status",
    ""
  ],
  "loadHistories.missingValue": [
    "Missing Value",
    ""
  ],
  "svgLightElement.azimuth": [
    "Azimuth",
    ""
  ],
  "svgLightElement.elevation": [
    "Elevation",
    ""
  ],
  "svgLightElement.pointsAtX": [
    "Points At X",
    ""
  ],
  "svgLightElement.pointsAtY": [
    "Points At Y",
    ""
  ],
  "svgLightElement.pointsAtZ": [
    "Points At Z",
    ""
  ],
  "svgLightElement.specularExponent": [
    "Specular Exponent",
    ""
  ],
  "svgLightElement.limitingConeAngle": [
    "Limiting Cone Angle",
    ""
  ],
  "pageInclude.reload": [
    "Reload",
    ""
  ],
  "pageInclude.onContentLoaded": [
    "On Content Loaded",
    ""
  ],
  "pageInclude.onContentLoadFailed": [
    "On Content Load Failed",
    ""
  ],
  "text.ellipsis": [
    "Ellipsis",
    ""
  ],
  "text.isHTML": [
    "Is HTML",
    "Defines whether the string in this text component is treated as HTML, and HTML tags are parsed. Does not parse advanced HTML tags such as URLs."
  ],
  "text.isAdvancedHTML": [
    "Is Advanced HTML",
    "Defines whether the string in this text component is treated as HTML, and all HTML tags are parsed, including URLs."
  ],
  "text.editable": [
    "Editable",
    "Defines whether the user can edit the text in this text component at runtime by clicking into it."
  ],
  "text.textSelectable": [
    "Text Selectable",
    ""
  ],
  "text.multiline": [
    "Multiline",
    "<p>Defines whether this text component has multiline capability. Hold Alt+Enter to insert a line break.</p>\n<p><strong>True</strong><br />\nLine breaks are recognized.</p>\n<p><strong>False</strong><br />\nLine breaks are ignored. All text is displayed on a single line.</p>"
  ],
  "img.src": [
    "Src",
    ""
  ],
  "img.!numFrames": [
    "Num Frames",
    ""
  ],
  "img.frameIndex": [
    "Frame Index",
    ""
  ],
  "img.@onComplete": [
    "On Complete",
    ""
  ],
  "img.intervalMillis": [
    "Interval Millis",
    ""
  ],
  "img.isAnimator": [
    "Frame Animator",
    "The Frame Animator property determines whether the image component animates through a specified list of frames. The image defined for the image component is only displayed when the animation is not active, unless it is also defined as an animation frame."
  ],
  "img.frames": [
    "Frames",
    ""
  ],
  "img.reverse": [
    "Reverse",
    "<p>The Reverse property determines whether the animation frames are displayed in reverse.</p>
<p><strong>True</strong><br />
The topmost frame in the Property Inspector appears first in the animation sequence.</p>
<p><strong>False</strong><br />
The bottommost frame in the Property Inspector appears first in the animation sequence.</p>"
  ],
  "img.breakApart": [
    "Break Apart",
    ""
  ],
  "iframe.scrolling": [
    "Scrolling",
    ""
  ],
  "iframe.refresh": [
    "Refresh",
    ""
  ],
  "video.controls": [
    "Controls",
    ""
  ],
  "video.autoplay": [
    "Autoplay",
    ""
  ],
  "video.play": [
    "Play",
    ""
  ],
  "video.pause": [
    "Pause",
    ""
  ],
  "video.stop": [
    "Stop",
    ""
  ],
  "video.restart": [
    "Restart",
    ""
  ],
  "video.@onEnded": [
    "On Ended",
    ""
  ],
  "video.volume": [
    "Volume",
    ""
  ],
  "map.apikey": [
    "Apikey",
    ""
  ],
  "map.zoom": [
    "Zoom",
    ""
  ],
  "map.mapControls": [
    "Map Controls",
    ""
  ],
  "map.weatherLayer": [
    "Weather Layer",
    ""
  ],
  "map.cloudsLayer": [
    "Clouds Layer",
    ""
  ],
  "map.trafficLayer": [
    "Traffic Layer",
    ""
  ],
  "map.mapType": [
    "Map Type",
    ""
  ],
  "map.temperatureUnit": [
    "Temperature Unit",
    ""
  ],
  "map.latField": [
    "Lat Field",
    ""
  ],
  "map.lngField": [
    "Lng Field",
    ""
  ],
  "map.imagePattern": [
    "Image Pattern",
    ""
  ],
  "map.imageTileSize": [
    "Image Tile Size",
    ""
  ],
  "map.imageMaxZoom": [
    "Image Max Zoom",
    ""
  ],
  "heatMap.showLegend": [
    "Show Legend",
    ""
  ],
  "heatMap.falloff": [
    "Falloff",
    ""
  ],
  "heatMap.dataField": [
    "Data Field",
    ""
  ],
  "calendar.selectedValue": [
    "Selected Value",
    ""
  ],
  "calendar.selectedRangeValue": [
    "Selected Range Value",
    ""
  ],
  "calendar.selectedDays": [
    "Selected Days",
    ""
  ],
  "calendar.noSelectFutureDate": [
    "No Select Future Date",
    ""
  ],
  "calendar.highlightedDays": [
    "Highlighted Days",
    ""
  ],
  "calendar.prevArrowSymbol": [
    "Prev Arrow Symbol",
    ""
  ],
  "calendar.nextArrowSymbol": [
    "Next Arrow Symbol",
    ""
  ],
  "calendar.currentMonth": [
    "Current Month",
    ""
  ],
  "calendar.currentYear": [
    "Current Year",
    ""
  ],
  "calendar.arrowFontFamily": [
    "Arrow Font Family",
    ""
  ],
  "daterangePicker.inputMode": [
    "Input Mode",
    ""
  ],
  "daterangePicker.popupBackground": [
    "Popup Background",
    ""
  ],
  "daterangePicker.buttonFontFamily": [
    "Button Font Family",
    ""
  ],
  "daterangePicker.buttonFontSize": [
    "Button Font Size",
    ""
  ],
  "daterangePicker.buttonFontStyle": [
    "Button Font Style",
    ""
  ],
  "daterangePicker.buttonFontWeight": [
    "Button Font Weight",
    ""
  ],
  "daterangePicker.buttonTextDecoration": [
    "Button Text Decoration",
    ""
  ],
  "daterangePicker.buttonFontColor": [
    "Button Font Color",
    ""
  ],
  "daterangePicker.buttonBackground": [
    "Button Background",
    ""
  ],
  "daterangePicker.buttonBackgroundActive": [
    "Button Background Active",
    ""
  ],
  "daterangePicker.buttonBackgroundOver": [
    "Button Background Over",
    ""
  ],
  "daterangePicker.buttonBorder": [
    "Button Border",
    ""
  ],
  "daterangePicker.buttonBorderWidth": [
    "Button Border Width",
    ""
  ],
  "daterangePicker.buttonBorderStyle": [
    "Button Border Style",
    ""
  ],
  "datagrid.rowHeight": [
    "Row Height",
    ""
  ],
  "datagrid.rowBackground": [
    "Row Background",
    ""
  ],
  "datagrid.rowBackground2": [
    "Row Background2",
    ""
  ],
  "datagrid.rowBorder": [
    "Row Border",
    ""
  ],
  "datagrid.rowBorderWidth": [
    "Row Border Width",
    ""
  ],
  "datagrid.rowBorderStyle": [
    "Row Border Style",
    ""
  ],
  "datagrid.rowBorder2": [
    "Row Border2",
    ""
  ],
  "datagrid.rowBorder2Width": [
    "Row Border2 Width",
    ""
  ],
  "datagrid.rowBorder2Style": [
    "Row Border2 Style",
    ""
  ],
  "datagrid.rowBackgroundSelect": [
    "Row Background Select",
    ""
  ],
  "datagrid.rowBorderSelect": [
    "Row Border Select",
    ""
  ],
  "datagrid.rowBorderWidthSelect": [
    "Row Border Width Select",
    ""
  ],
  "datagrid.rowBorderStyleSelect": [
    "Row Border Style Select",
    ""
  ],
  "datagrid.rowBackgroundFocus": [
    "Row Background Focus",
    ""
  ],
  "datagrid.rowBorderFocus": [
    "Row Border Focus",
    ""
  ],
  "datagrid.rowBorderWidthFocus": [
    "Row Border Width Focus",
    ""
  ],
  "datagrid.rowBorderStyleFocus": [
    "Row Border Style Focus",
    ""
  ],
  "datagrid.rowBackgroundHover": [
    "Row Background Hover",
    ""
  ],
  "datagrid.rowBorderHover": [
    "Row Border Hover",
    ""
  ],
  "datagrid.rowBorderWidthHover": [
    "Row Border Width Hover",
    ""
  ],
  "datagrid.rowBorderStyleHover": [
    "Row Border Style Hover",
    ""
  ],
  "datagrid.cellPadding": [
    "Cell Padding",
    ""
  ],
  "datagrid.defaultCellAlign": [
    "Default Cell Align",
    ""
  ],
  "datagrid.defaultCellVerticalAlign": [
    "Default Cell Vertical Align",
    ""
  ],
  "datagrid.defaultCellFontFamily": [
    "Default Cell Font Family",
    ""
  ],
  "datagrid.defaultCellFontColor": [
    "Default Cell Font Color",
    ""
  ],
  "datagrid.defaultCellFontSize": [
    "Default Cell Font Size",
    ""
  ],
  "datagrid.defaultCellFontWeight": [
    "Default Cell Font Weight",
    ""
  ],
  "datagrid.defaultCellFontStyle": [
    "Default Cell Font Style",
    ""
  ],
  "datagrid.defaultCellPaddingTop": [
    "Default Cell Padding Top",
    ""
  ],
  "datagrid.defaultCellPaddingBottom": [
    "Default Cell Padding Bottom",
    ""
  ],
  "datagrid.defaultCellPaddingLeft": [
    "Default Cell Padding Left",
    ""
  ],
  "datagrid.defaultCellPaddingRight": [
    "Default Cell Padding Right",
    ""
  ],
  "datagrid.defaultCellKeepEqualPaddings": [
    "Link Paddings",
    "Links all four padding editors so that their values are equal."
  ],
  "datagrid.gridMode": [
    "Grid Mode",
    ""
  ],
  "datagrid.hGridWidth": [
    "H Grid Width",
    ""
  ],
  "datagrid.hGridStroke": [
    "H Grid Stroke",
    ""
  ],
  "datagrid.hGridColor": [
    "H Grid Color",
    ""
  ],
  "datagrid.vGridWidth": [
    "V Grid Width",
    ""
  ],
  "datagrid.vGridStroke": [
    "V Grid Stroke",
    ""
  ],
  "datagrid.vGridColor": [
    "V Grid Color",
    ""
  ],
  "datagrid.headerHeight": [
    "Header Height",
    ""
  ],
  "datagrid.headerBackground": [
    "Header Background",
    ""
  ],
  "datagrid.headerBorder": [
    "Header Border",
    ""
  ],
  "datagrid.headerBorderWidth": [
    "Header Border Width",
    ""
  ],
  "datagrid.headerBorderStyle": [
    "Header Border Style",
    ""
  ],
  "datagrid.vHeaderGridWidth": [
    "V Header Grid Width",
    ""
  ],
  "datagrid.vHeaderGridStroke": [
    "V Header Grid Stroke",
    ""
  ],
  "datagrid.vHeaderGridColor": [
    "V Header Grid Color",
    ""
  ],
  "datagrid.headerAlign": [
    "Header Align",
    ""
  ],
  "datagrid.headerVerticalAlign": [
    "Header Vertical Align",
    ""
  ],
  "datagrid.headerFontFamily": [
    "Header Font Family",
    ""
  ],
  "datagrid.headerFontColor": [
    "Header Font Color",
    ""
  ],
  "datagrid.headerFontSize": [
    "Header Font Size",
    ""
  ],
  "datagrid.headerFontWeight": [
    "Header Font Weight",
    ""
  ],
  "datagrid.headerFontStyle": [
    "Header Font Style",
    ""
  ],
  "datagrid.ignoreCols": [
    "Ignore Cols",
    ""
  ],
  "datagrid.hoveredIndex": [
    "Hovered Index",
    ""
  ],
  "datagrid.sortOrder": [
    "Sort Order",
    ""
  ],
  "datagrid.sortColumn": [
    "Sort Column",
    ""
  ],
  "datagrid.headerPaddingTop": [
    "Header Padding Top",
    ""
  ],
  "datagrid.headerPaddingBottom": [
    "Header Padding Bottom",
    ""
  ],
  "datagrid.headerPaddingLeft": [
    "Header Padding Left",
    ""
  ],
  "datagrid.headerPaddingRight": [
    "Header Padding Right",
    ""
  ],
  "datagrid.keepEqualHeaderPaddings": [
    "Keep Equal Header Paddings",
    ""
  ],
  "datagrid.rowFocusable": [
    "Row Focusable",
    ""
  ],
  "datagrid.focusedRowIndex": [
    "Focused Row Index",
    ""
  ],
  "datagridRows.rowHeight": [
    "Grid.row Height",
    ""
  ],
  "datagridRows.rowBackground": [
    "Grid.row Background",
    ""
  ],
  "datagridRows.rowBackground2": [
    "Grid.row Background2",
    ""
  ],
  "datagridRows.rowBorder": [
    "Grid.row Border",
    ""
  ],
  "datagridRows.rowBorderWidth": [
    "Grid.row Border Width",
    ""
  ],
  "datagridRows.rowBorderStyle": [
    "Grid.row Border Style",
    ""
  ],
  "datagridRows.rowBorder2": [
    "Grid.row Border2",
    ""
  ],
  "datagridRows.rowBorder2Width": [
    "Grid.row Border2 Width",
    ""
  ],
  "datagridRows.rowBorder2Style": [
    "Grid.row Border2 Style",
    ""
  ],
  "datagridRows.rowBackgroundSelect": [
    "Grid.row Background Select",
    ""
  ],
  "datagridRows.rowBorderSelect": [
    "Grid.row Border Select",
    ""
  ],
  "datagridRows.rowBorderWidthSelect": [
    "Grid.row Border Width Select",
    ""
  ],
  "datagridRows.rowBorderStyleSelect": [
    "Grid.row Border Style Select",
    ""
  ],
  "datagridRows.rowBackgroundFocus": [
    "Grid.row Background Focus",
    ""
  ],
  "datagridRows.rowBorderFocus": [
    "Grid.row Border Focus",
    ""
  ],
  "datagridRows.rowBorderWidthFocus": [
    "Grid.row Border Width Focus",
    ""
  ],
  "datagridRows.rowBorderStyleFocus": [
    "Grid.row Border Style Focus",
    ""
  ],
  "datagridRows.rowBackgroundHover": [
    "Grid.row Background Hover",
    ""
  ],
  "datagridRows.rowBorderHover": [
    "Grid.row Border Hover",
    ""
  ],
  "datagridRows.rowBorderWidthHover": [
    "Grid.row Border Width Hover",
    ""
  ],
  "datagridRows.rowBorderStyleHover": [
    "Grid.row Border Style Hover",
    ""
  ],
  "datagridRows.cellPadding": [
    "Grid.cell Padding",
    ""
  ],
  "datagridRows.defaultCellAlign": [
    "Grid.default Cell Align",
    ""
  ],
  "datagridRows.defaultCellVerticalAlign": [
    "Grid.default Cell Vertical Align",
    ""
  ],
  "datagridRows.defaultCellFontFamily": [
    "Grid.default Cell Font Family",
    ""
  ],
  "datagridRows.defaultCellFontColor": [
    "Grid.default Cell Font Color",
    ""
  ],
  "datagridRows.defaultCellFontSize": [
    "Grid.default Cell Font Size",
    ""
  ],
  "datagridRows.defaultCellFontWeight": [
    "Grid.default Cell Font Weight",
    ""
  ],
  "datagridRows.defaultCellFontStyle": [
    "Grid.default Cell Font Style",
    ""
  ],
  "datagridRows.defaultCellPaddingTop": [
    "Grid.default Cell Padding Top",
    ""
  ],
  "datagridRows.defaultCellPaddingBottom": [
    "Grid.default Cell Padding Bottom",
    ""
  ],
  "datagridRows.defaultCellPaddingLeft": [
    "Grid.default Cell Padding Left",
    ""
  ],
  "datagridRows.defaultCellPaddingRight": [
    "Grid.default Cell Padding Right",
    ""
  ],
  "datagridRows.defaultCellKeepEqualPaddings": [
    "Grid.default Cell Keep Equal Paddings",
    ""
  ],
  "datagridRows.gridMode": [
    "Grid.grid Mode",
    ""
  ],
  "datagridHeader.headerHeight": [
    "Grid.header Height",
    ""
  ],
  "datagridHeader.headerBackground": [
    "Grid.header Background",
    ""
  ],
  "datagridHeader.headerBorder": [
    "Grid.header Border",
    ""
  ],
  "datagridHeader.headerBorderWidth": [
    "Grid.header Border Width",
    ""
  ],
  "datagridHeader.headerBorderStyle": [
    "Grid.header Border Style",
    ""
  ],
  "datagridHeader.vHeaderGridWidth": [
    "Grid.v Header Grid Width",
    ""
  ],
  "datagridHeader.vHeaderGridStroke": [
    "Grid.v Header Grid Stroke",
    ""
  ],
  "datagridHeader.vHeaderGridColor": [
    "Grid.v Header Grid Color",
    ""
  ],
  "datagridHeader.headerAlign": [
    "Grid.header Align",
    ""
  ],
  "datagridHeader.headerVerticalAlign": [
    "Grid.header Vertical Align",
    ""
  ],
  "datagridHeader.headerFontFamily": [
    "Grid.header Font Family",
    ""
  ],
  "datagridHeader.headerFontColor": [
    "Grid.header Font Color",
    ""
  ],
  "datagridHeader.headerFontSize": [
    "Grid.header Font Size",
    ""
  ],
  "datagridHeader.headerFontWeight": [
    "Grid.header Font Weight",
    ""
  ],
  "datagridHeader.headerFontStyle": [
    "Grid.header Font Style",
    ""
  ],
  "datagridHeader.headerPaddingTop": [
    "Grid.header Padding Top",
    ""
  ],
  "datagridHeader.headerPaddingBottom": [
    "Grid.header Padding Bottom",
    ""
  ],
  "datagridHeader.headerPaddingLeft": [
    "Grid.header Padding Left",
    ""
  ],
  "datagridHeader.headerPaddingRight": [
    "Grid.header Padding Right",
    ""
  ],
  "datagridHeader.keepEqualHeaderPaddings": [
    "Grid.keep Equal Header Paddings",
    ""
  ],
  "chart.dataTipMode": [
    "Data Tip Mode",
    ""
  ],
  "chart.columnWidthRatio": [
    "Column Width Ratio",
    ""
  ],
  "chart.barWidthRatio": [
    "Bar Width Ratio",
    ""
  ],
  "chart.innerRadius": [
    "Inner Radius",
    ""
  ],
  "chart.outerRadius": [
    "Outer Radius",
    ""
  ],
  "chart.reduceOuterRadius": [
    "Reduce Outer Radius",
    ""
  ],
  "rawSvgRepeater.svgItem": [
    "Svg Item",
    ""
  ],
  "rawSvgRepeater.svgDefs": [
    "Svg Defs",
    ""
  ],
  "rawSvgRepeater.dataTipSymbol": [
    "Data Tip Symbol",
    ""
  ],
  "scaleTicks.ticksPlacement": [
    "Ticks Placement",
    ""
  ],
  "scaleTicks.majorTickStroke": [
    "Major Tick Stroke",
    ""
  ],
  "scaleTicks.majorTickStrokeWidth": [
    "Major Tick Stroke Width",
    ""
  ],
  "scaleTicks.majorTicksPercentLength": [
    "Major Ticks Percent Length",
    ""
  ],
  "scaleTicks.minorTicksCount": [
    "Minor Ticks Count",
    ""
  ],
  "scaleTicks.minorTicksPercentLength": [
    "Minor Ticks Percent Length",
    ""
  ],
  "scaleLabels.showMinMaxOnly": [
    "Show Min Max Only",
    ""
  ],
  "scaleLabels.percentTextSize": [
    "Percent Text Size",
    ""
  ],
  "scaleLabels.justify": [
    "Justify",
    ""
  ],
  "scaleTrack.percentStartThickness": [
    "Percent Start Thickness",
    ""
  ],
  "scaleTrack.percentEndThickness": [
    "Percent End Thickness",
    ""
  ],
  "textEditor.ignoreDefaultStyle": [
    "Ignore Default Style",
    ""
  ],
  "textEditor.displayAsPassword": [
    "Display As Password",
    ""
  ],
  "boolEditor.trueLabel": [
    "True Label",
    ""
  ],
  "boolEditor.falseLabel": [
    "False Label",
    ""
  ],
  "boolEditor.placeLabelRight": [
    "Place Label Right",
    ""
  ],
  "numberSliderEditor.valueScale": [
    "Value Scale",
    ""
  ],
  "numberSliderEditor.presicion": [
    "Presicion",
    ""
  ],
  "numberSliderEditor.postfix": [
    "Postfix",
    ""
  ],
  "rangeFormInput.ticks": [
    "Ticks",
    ""
  ],
  "listFormElement.showArrow": [
    "Show Arrow",
    ""
  ],
  "listFormElement.arrowImage": [
    "Arrow Image",
    ""
  ],
  "listFormElement.options": [
    "Options",
    ""
  ],
  "listFormElement.optionFontFamily": [
    "Option Font Family",
    ""
  ],
  "listFormElement.optionLineHeight": [
    "Option Line Height",
    ""
  ],
  "listFormElement.optionFontSize": [
    "Option Font Size",
    ""
  ],
  "listFormElement.optionFontStyle": [
    "Option Font Style",
    ""
  ],
  "listFormElement.optionFontWeight": [
    "Option Font Weight",
    ""
  ],
  "listFormElement.optionTextDecoration": [
    "Option Text Decoration",
    ""
  ],
  "listFormElement.optionColor": [
    "Option Color",
    ""
  ],
  "listFormElement.optionTextAlign": [
    "Option Text Align",
    ""
  ],
  "listFormElement.optionBackground": [
    "Option Background",
    ""
  ],
  "fileFormInput.binaryMode": [
    "Binary Mode",
    ""
  ],
  "fileFormInput.file": [
    "File",
    ""
  ],
  "fileFormInput.open": [
    "Open",
    ""
  ],
  "fileFormInput.accept": [
    "Accept",
    ""
  ],
  "svg:text.textAnchor": [
    "Text Anchor",
    ""
  ],
  "linearAxis.assignedMinorInterval": [
    "Assigned Minor Interval",
    ""
  ],
  "categoryAxis.categoryField": [
    "Category Field",
    ""
  ],
  "categoryAxis.dgCategoryOrder": [
    "Dg Category Order",
    ""
  ],
  "datetimeAxis.dgDataUnits": [
    "Dg Data Units",
    ""
  ],
  "datetimeAxis.dgDataInterval": [
    "Dg Data Interval",
    ""
  ],
  "datetimeAxis.dgLabelUnits": [
    "Dg Label Units",
    ""
  ],
  "datetimeAxis.alignLabelsToUnits": [
    "Align Labels To Units",
    ""
  ],
  "datetimeAxis.leftRightLabelThreshold": [
    "Left Right Label Threshold",
    ""
  ],
  "datetimeAxis.compareMode": [
    "Compare Mode",
    ""
  ],
  "datetimeAxis.dateRange": [
    "Date Range",
    ""
  ],
  "datetimeAxis.dgDateFormat": [
    "Dg Date Format",
    ""
  ],
  "lineSeries.lineStroke": [
    "Line Stroke",
    ""
  ],
  "lineSeries.lineStrokeWidth": [
    "Line Stroke Width",
    ""
  ],
  "lineSeries.lineStrokeStyle": [
    "Line Stroke Style",
    ""
  ],
  "areaSeries.areaStroke": [
    "Area Stroke",
    ""
  ],
  "areaSeries.areaStrokeWidth": [
    "Area Stroke Width",
    ""
  ],
  "areaSeries.areaStrokeStyle": [
    "Area Stroke Style",
    ""
  ],
  "areaSeries.areaFill": [
    "Area Fill",
    ""
  ],
  "columnSeries.dgOffset": [
    "Dg Offset",
    ""
  ],
  "bubbleSeries.rAxisType": [
    "R Axis Type",
    ""
  ],
  "bubbleSeries.minRadius": [
    "Min Radius",
    ""
  ],
  "bubbleSeries.maxRadius": [
    "Max Radius",
    ""
  ],
  "bubbleSeries.cField": [
    " Color  Field",
    ""
  ],
  "pieSeries.dgWedgeLabel": [
    "Dg Wedge Label",
    ""
  ],
  "pieSeries.radialStroke": [
    "Radial Stroke",
    ""
  ],
  "pieSeries.radialStrokeWidth": [
    "Radial Stroke Width",
    ""
  ],
  "pieSeries.radialStrokeStyle": [
    "Radial Stroke Style",
    ""
  ],
  "pieSeries.calloutGap": [
    "Callout Gap",
    ""
  ],
  "pieSeries.calloutStroke": [
    "Callout Stroke",
    ""
  ],
  "pieSeries.calloutStrokeWidth": [
    "Callout Stroke Width",
    ""
  ],
  "pieSeries.calloutStrokeStyle": [
    "Callout Stroke Style",
    ""
  ],
  "pieSeries.labelPosition": [
    "Label Position",
    ""
  ],
  "pieSeries.renderDirection": [
    "Render Direction",
    ""
  ],
  "pieSeries.explodeRadius": [
    "Explode Radius",
    ""
  ],
  "pieSeries.dgFills": [
    "Dg Fills",
    ""
  ],
  "pieSeries.innerRadiusInPixels": [
    "Inner Radius In Pixels",
    ""
  ],
  "pieSeries.outerRadiusInPixels": [
    "Outer Radius In Pixels",
    ""
  ],
  "pieSeries.colorField": [
    "Color Field",
    ""
  ],
  "spectrumSeries.dateField": [
    "Date Field",
    ""
  ],
  "spectrumSeries.valueField": [
    "Value Field",
    ""
  ],
  "spectrumSeries.xInterval": [
    "X Interval",
    ""
  ],
  "spectrumSeries.peakColor": [
    "Peak Color",
    ""
  ],
  "spectrumSeries.highSeparatorColor": [
    "High Separator Color",
    ""
  ],
  "spectrumSeries.midColor": [
    "Mid Color",
    ""
  ],
  "spectrumSeries.lowSeparatorColor": [
    "Low Separator Color",
    ""
  ],
  "spectrumSeries.minColor": [
    "Min Color",
    ""
  ],
  "gridlines.gridDirection": [
    "Grid Direction",
    ""
  ],
  "gridlines.horizontalAlternateFill": [
    "Horizontal Alternate Fill",
    ""
  ],
  "gridlines.horizontalChangeCount": [
    "Horizontal Change Count",
    ""
  ],
  "gridlines.horizontalFill": [
    "Horizontal Fill",
    ""
  ],
  "gridlines.horizontalOriginStroke": [
    "Horizontal Origin Stroke",
    ""
  ],
  "gridlines.horizontalOriginStrokeWidth": [
    "Horizontal Origin Stroke Width",
    ""
  ],
  "gridlines.horizontalShowOrigin": [
    "Horizontal Show Origin",
    ""
  ],
  "gridlines.horizontalStroke": [
    "Horizontal Stroke",
    ""
  ],
  "gridlines.horizontalStrokeWidth": [
    "Horizontal Stroke Width",
    ""
  ],
  "gridlines.horizontalStrokeStyle": [
    "Horizontal Stroke Style",
    ""
  ],
  "gridlines.horizontalTickAligned": [
    "Horizontal Tick Aligned",
    ""
  ],
  "gridlines.verticalAlternateFill": [
    "Vertical Alternate Fill",
    ""
  ],
  "gridlines.verticalChangeCount": [
    "Vertical Change Count",
    ""
  ],
  "gridlines.verticalFill": [
    "Vertical Fill",
    ""
  ],
  "gridlines.verticalOriginStroke": [
    "Vertical Origin Stroke",
    ""
  ],
  "gridlines.verticalOriginStrokeWidth": [
    "Vertical Origin Stroke Width",
    ""
  ],
  "gridlines.verticalShowOrigin": [
    "Vertical Show Origin",
    ""
  ],
  "gridlines.verticalStroke": [
    "Vertical Stroke",
    ""
  ],
  "gridlines.verticalStrokeWidth": [
    "Vertical Stroke Width",
    ""
  ],
  "gridlines.verticalStrokeStyle": [
    "Vertical Stroke Style",
    ""
  ],
  "gridlines.verticalTickAligned": [
    "Vertical Tick Aligned",
    ""
  ],
  "gridlines.plottedAreaX": [
    "Plotted Area X",
    ""
  ],
  "gridlines.plottedAreaY": [
    "Plotted Area Y",
    ""
  ],
  "gridlines.plottedAreaWidth": [
    "Plotted Area Width",
    ""
  ],
  "gridlines.plottedAreaHeight": [
    "Plotted Area Height",
    ""
  ],
  "projectInfo.projectId": [
    "Project Id",
    ""
  ],
  "projectInfo.projectName": [
    "Project Name",
    ""
  ],
  "projectInfo.user": [
    "User",
    ""
  ],
  "projectInfo.superUser": [
    "Super User",
    ""
  ],
  "projectInfo.description": [
    "Description",
    ""
  ],
  "projectInfo.version": [
    "Version",
    ""
  ],
  "localStorage.global": [
    "Global",
    ""
  ],
  "openDashboard.dashboard": [
    "Dashboard",
    ""
  ],
  "openDashboard.destination": [
    "Destination",
    ""
  ],
  "openDashboard.self": [
    "Self",
    ""
  ],
  "openWeb.0": [
    "Name 0",
    ""
  ],
  "openWeb.1": [
    "Value 0",
    ""
  ],
  "gridColumn.!label": [
    "!label",
    ""
  ],
  "gridColumn.sortable": [
    "Sortable",
    ""
  ],
  "gridColumn.headerSymbol": [
    "Header Symbol",
    ""
  ],
  "iframeMessage.match": [
    "Match",
    ""
  ],
  "iframeMessage.origin": [
    "Origin",
    ""
  ],
  "frameMsgBroadcaster.messageGroup": [
    "Message Group",
    ""
  ],
  "frameMsgReceiver.messageGroups": [
    "Message Groups",
    ""
  ],
  "frameMsgReceiver.onMessage": [
    "On Message",
    ""
  ],
  "webDocument.screenWidth": [
    "Screen Width",
    ""
  ],
  "webDocument.screenHeight": [
    "Screen Height",
    ""
  ],
  "webDocument.pixelDepth": [
    "Pixel Depth",
    ""
  ],
  "webDocument.pixelRatio": [
    "Pixel Ratio",
    ""
  ],
  "webDocument.protocol": [
    "Protocol",
    ""
  ],
  "webDocument.host": [
    "Host",
    ""
  ],
  "webDocument.pathname": [
    "Pathname",
    ""
  ],
  "webDocument.inIFrame": [
    "In I Frame",
    ""
  ],
  "webDocument.hash": [
    "Hash",
    ""
  ],
  "webDocument.search": [
    "Search",
    ""
  ],
  "webDocument.language": [
    "Language",
    ""
  ],
  "webDocument.platform": [
    "Platform",
    ""
  ],
  "webDocument.userAgent": [
    "User Agent",
    ""
  ],
  "webDocument.appName": [
    "App Name",
    ""
  ],
  "webDocument.appCodeName": [
    "App Code Name",
    ""
  ],
  "webDocument.appVersion": [
    "App Version",
    ""
  ],
  "webDocument.product": [
    "Product",
    ""
  ],
  "webDocument.productSub": [
    "Product Sub",
    ""
  ],
  "webDocument.vendor": [
    "Vendor",
    ""
  ],
  "webDocument.vendorSub": [
    "Vendor Sub",
    ""
  ],
  "webDocument.isMobile": [
    "Is Mobile",
    ""
  ],
  "webDocument.hasTouch": [
    "Has Touch",
    ""
  ],
  "webDocument.initialScale": [
    "Initial Scale",
    ""
  ],
  "webDocument.lockScale": [
    "Lock Scale",
    ""
  ],
  "getViewProperty.objectPath": [
    "Object Path",
    ""
  ],
  "dragPosition.boundsLeft": [
    "Bounds Left",
    ""
  ],
  "dragPosition.boundsTop": [
    "Bounds Top",
    ""
  ],
  "dragPosition.boundsRight": [
    "Bounds Right",
    ""
  ],
  "dragPosition.boundsBottom": [
    "Bounds Bottom",
    ""
  ]
}
